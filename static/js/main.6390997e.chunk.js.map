{"version":3,"sources":["components/TrainingsCalendar","components/Addcustomer.js","components/Addtraining.js","components/Editcustomer.js","components/Customers.js","components/Trainings.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Addcustomer","props","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","_useState3","firstname","lastname","streetaddress","postcode","city","email","phone","_useState4","customer","setCustomer","handleClose","handleInputChange","event","objectSpread","defineProperty","target","name","value","react_default","a","createElement","Button","variant","onClick","Dialog","onClose","DialogTitle","DialogContent","TextField","autoFocus","margin","label","fullWidth","onChange","e","DialogActions","addCustomer","Addtraining","date","duration","activity","customerId","training","setTraining","dayjs","format","console","log","addTraining","Editcustomer","editCustomer","links","href","Customers","gridRef","useRef","customers","setCustomers","useEffect","fetchData","fetch","then","response","json","data","content","method","headers","Content-Type","body","JSON","stringify","res","catch","err","error","link","csvParams","columnKeys","allColumns","skipColumnGroupHeaders","exportCsv","useCallback","current","api","exportDataAsCsv","columns","headerName","field","sortable","filter","width","cellRenderer","cell","IconButton","aria-label","window","confirm","Delete_default","row","color","className","style","height","main","ref","columnDefs","rowData","animateRows","Trainings","trainings","setTrainings","valueFormatter","params","valueGetter","id","Home","App","setValue","Tabs","Tab","components_Home","TrainingsCalendar_default","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6390997e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TrainingsCalendar.5d9cd668.bin\";","import React, { useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\nexport default function Addcustomer(props) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [customer, setCustomer] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        streetaddress: \"\",\r\n        postcode: \"\",\r\n        city: \"\",\r\n        email: \"\",\r\n        phone: \"\"\r\n      });\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setCustomer({...customer, [event.target.name]: event.target.value })\r\n    };\r\n\r\n    const addCustomer = () => {\r\n        props.addCustomer(customer);\r\n        handleClose();\r\n    };\r\n  \r\n    return(\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Add new customers\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>New Customer</DialogTitle>\r\n\r\n                <DialogContent>\r\n                            <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"firstname\"\r\n                            value={customer.firstname}\r\n                            label=\"First name\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"lastname\"\r\n                            value={customer.lastname}\r\n                            label=\"Last name\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"streetaddress\"\r\n                            value={customer.streetaddress}\r\n                            label=\"Street address\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"postcode\"\r\n                            value={customer.postcode}\r\n                            label=\"Postcode\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"city\"\r\n                            value={customer.city}\r\n                            label=\"City\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"email\"\r\n                            value={customer.email}\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"phone\"\r\n                            value={customer.phone}\r\n                            label=\"Phone\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                <Button onClick={handleClose}>Cancel</Button>\r\n                <Button onClick={addCustomer}>Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function Addtraining(props) {\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n    const [training, setTraining] = useState({\r\n        date: '',\r\n        duration: '',\r\n        activity: '',\r\n        customer: props.customerId\r\n    });\r\n\r\n    const handleClickOpen = () => {\r\n        setTraining({\r\n            ...training,\r\n            date: dayjs().format('DD.MM.YYYY - HH:mm')\r\n        });\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        setTraining({ ...training, [event.target.name]: event.target.value });\r\n    }\r\n\r\n    const addTraining = () => {\r\n        console.log(training);\r\n        props.addTraining(training);\r\n        handleClose();\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Add new trainings\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>New Training</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        margin='dense'\r\n                        name='date'\r\n                        value={training.date}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label='Date'\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin='dense'\r\n                        name='duration'\r\n                        value={training.duration}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label='Duration'\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin='dense'\r\n                        name='activity'\r\n                        value={training.activity}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label='Activity'\r\n                        fullWidth\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                    <Button onClick={addTraining}>Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n\t);\r\n}","import React, { useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\nexport default function Editcustomer(props) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [customer, setCustomer] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        streetaddress: \"\",\r\n        postcode: \"\",\r\n        city: \"\",\r\n        email: \"\",\r\n        phone: \"\"\r\n      });\r\n\r\n    const handleClickOpen = () => {\r\n      setCustomer({\r\n        firstname: props.customer.firstname,\r\n        lastname: props.customer.lastname,\r\n        streetaddress: props.customer.streetaddress,\r\n        postcode: props.customer.postcode,\r\n        city: props.customer.city,\r\n        email: props.customer.email,\r\n        phone: props.customer.phone\r\n    })\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setCustomer({...customer, [event.target.name]: event.target.value })\r\n    };\r\n\r\n    const editCustomer = () => {\r\n        props.editCustomer(customer, props.customer.links[0].href);\r\n        handleClose();\r\n    };\r\n  \r\n    return(\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Edit\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Edit customer</DialogTitle>\r\n\r\n                <DialogContent>\r\n                            <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"firstname\"\r\n                            value={customer.firstname}\r\n                            label=\"First name\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"lastname\"\r\n                            value={customer.lastname}\r\n                            label=\"Last name\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"streetaddress\"\r\n                            value={customer.streetaddress}\r\n                            label=\"Street address\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"postcode\"\r\n                            value={customer.postcode}\r\n                            label=\"Postcode\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"city\"\r\n                            value={customer.city}\r\n                            label=\"City\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"email\"\r\n                            value={customer.email}\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"phone\"\r\n                            value={customer.phone}\r\n                            label=\"Phone\"\r\n                            fullWidth\r\n                            onChange={e => handleInputChange(e)}\r\n                        />\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                <Button onClick={handleClose}>Cancel</Button>\r\n                <Button onClick={editCustomer}>Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { AgGridReact } from'ag-grid-react'\r\nimport'ag-grid-community/dist/styles/ag-grid.css'\r\nimport'ag-grid-community/dist/styles/ag-theme-material.css';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Addcustomer from \"./Addcustomer\";\r\nimport Addtraining from \"./Addtraining\";\r\nimport Editcustomer from \"./Editcustomer\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Button } from \"@mui/material\"\r\n\r\nexport default function Customers() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const gridRef = useRef();\r\n    const [customers, setCustomers] = useState([]);\r\n\r\n\r\n\tuseEffect(() => fetchData(), []);\r\n\r\n\tconst fetchData = () => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers')\r\n            .then(response => response.json())\r\n            .then(data => setCustomers(data.content))\r\n    }\r\n\r\n    const addCustomer = (customer) => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers', {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(customer),\r\n        })\r\n        .then((response) => {\r\n            fetchData()\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const addTraining = (training) => {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(training)\r\n        })\r\n        .then(res => {\r\n          fetchData()\r\n          setOpen(true)\r\n        })\r\n        .catch(err => console.error(err))\r\n      }\r\n\r\n    const deleteCustomer = (link) => {\r\n        if (window.confirm('Are you sure you want to delete this customer?')) {\r\n        fetch(link, {method: 'DELETE'})\r\n        .then(response => fetchData())\r\n        .catch(err => console.error(err))\r\n    }}\r\n\r\n    const editCustomer = (customer, link) => {\r\n        fetch(link, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(customer)\r\n        })\r\n        .then(res => {\r\n          fetchData()\r\n          setOpen(true)\r\n        })\r\n        .catch(err => console.error(err))\r\n      } \r\n      const csvParams = {\r\n        columnKeys: ['firstname', 'lastname', 'streetaddress', 'postcode', 'city', 'email', 'phone'],\r\n        allColumns: false,\r\n        skipColumnGroupHeaders: true\r\n    }\r\n\r\n    const exportCsv = useCallback(() => {\r\n        gridRef.current.api.exportDataAsCsv(csvParams);\r\n    }, []);\r\n\r\n    const columns = [\r\n        {headerName: 'First name', field: 'firstname', sortable: true, filter: true},\r\n    \r\n        {headerName: 'Last name', field: 'lastname', sortable: true, filter: true},\r\n\r\n        {headerName: 'Street address', field: 'streetaddress', sortable: true, filter: true},\r\n\r\n        {headerName: 'Postcode', field: 'postcode', sortable: true, filter: true},\r\n\r\n        {headerName: 'City', field: 'city', sortable: true, filter: true},\r\n\r\n        {headerName: 'Email', field: 'email', sortable: true, filter: true},\r\n\r\n        {headerName: 'Phone', field: 'phone', sortable: true, filter: true},\r\n\r\n        {headerName: \"\", field: 'links.0.href', width: 220, cellRenderer:(cell) => <Addtraining addTraining={addTraining} customerId={cell.value} />},\r\n\r\n        {headerName: \"\", field: 'links.0.href', width: 60, cellRenderer:(cell) => <IconButton aria-label=\"delete\" onClick={() => deleteCustomer(cell.value)}><DeleteIcon /></IconButton>},\r\n\r\n        {headerName: \"\", field: 'links.0.href', width: 100, cellRenderer:(row) => <Editcustomer editCustomer={editCustomer} customer={row.data} />}\r\n      ] \r\n\r\nreturn (\r\n    <div>\r\n    <div>\r\n        <h1>Customers</h1>\r\n    </div>\r\n    <div>\r\n    <Button color=\"secondary\" variant=\"contained\" onClick={() => exportCsv()}>Export</Button>\r\n    \r\n    </div>\r\n    <Addcustomer addCustomer={addCustomer} />\r\n\r\n    <div className=\"ag-theme-material\"style={{height: '700px', width: '70%', margin: 'auto'}} >\r\n        <AgGridReact\r\n            ref={gridRef}\r\n            columnDefs={columns}\r\n            rowData={customers}\r\n            animateRows='true'\r\n\r\n            >\r\n                \r\n        </AgGridReact>\r\n    </div>\r\n    </div>\r\n)\r\n\r\n\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { AgGridReact } from'ag-grid-react'\r\nimport'ag-grid-community/dist/styles/ag-grid.css'\r\nimport'ag-grid-community/dist/styles/ag-theme-material.css';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { IconButton } from \"@mui/material\";\r\nimport dayjs from \"dayjs\";\r\n\r\n\r\nexport default function Trainings() {\r\n\r\n    const [trainings, setTrainings] = useState([]);\r\n\r\n\tuseEffect(() => fetchData(), []);\r\n\r\n\r\n\tconst fetchData = () => {\r\n        fetch('https://customerrest.herokuapp.com/gettrainings')\r\n            .then(response => response.json())\r\n            .then(data => setTrainings(data))\r\n    }\r\n\r\n    const deleteTraining = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this training?')) {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings/' + id, {method: 'DELETE'})\r\n        .then(response => fetchData())\r\n        .catch(err => console.error(err))\r\n    }}\r\n\r\n    const dateFormat = (params) => {\r\n        console.log(params.value);\r\n        if (params.value !== \"\") {\r\n            return dayjs(params.value).format('DD.MM.YYYY - HH:mm');\r\n        }\r\n    }\r\n    const nameFormatter = (params) => {\r\n        return params.data.customer.firstname + ' ' + params.data.customer.lastname;\r\n    }\r\n\r\n    const columns = [\r\n        {headerName: 'Date', field: 'date', sortable: true, filter: true, valueFormatter: dateFormat},\r\n    \r\n        {headerName: 'Duration', field: 'duration', sortable: true, filter: true},\r\n        \r\n        {headerName: 'Activity', field: 'activity', sortable: true, filter: true},\r\n\r\n        {headerName: 'Customer', field: 'customer', valueGetter: nameFormatter, sortable: true, filter: true},\r\n\r\n        {headerName: \"\", field: 'id', width: 100, cellRenderer:(cell) => <IconButton aria-label=\"delete\" onClick={() => deleteTraining(cell.value)}><DeleteIcon /></IconButton>}\r\n\r\n      ] \r\nreturn (\r\n    <div>\r\n    <div>\r\n        <h1>Trainings</h1>\r\n    </div>\r\n\r\n    <div className=\"ag-theme-material\"style={{height: '700px', width: '70%', margin: 'auto'}} >\r\n        <AgGridReact\r\n            columnDefs={columns}\r\n            rowData={trainings}\r\n            animateRows='true'\r\n            >\r\n        </AgGridReact>\r\n    </div>\r\n    </div>\r\n)\r\n\r\n\r\n    \r\n}","import React from \"react\";\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div className=\"container py-5\">\r\n\t\t\t<h1>Main page</h1>\r\n\t\t\t<p>Welcome to our sites!</p>\r\n\t\t\t<p>You can navigate using the links above!</p>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\nimport './App.css';\nimport Customers from './components/Customers';\nimport Trainings from './components/Trainings';\nimport TrainingsCalendar from './components/TrainingsCalendar'\nimport Home from './components/Home';\nimport Tabs from'@mui/material/Tabs';\nimport Tab from'@mui/material/Tab';\n\n\n\nfunction App() {\n\n  const [value, setValue] = useState('home');\n\n  const handleTabChange = (event, value) => {\n    setValue(value);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Personal Trainer App</h1>\n      </header>\n      <div>\n      <Tabs value={value} onChange={handleTabChange}>\n        <Tab value=\"home\" label=\"Home\" />\n        <Tab value=\"customers\" label=\"Customers\" />\n        <Tab value=\"trainings\" label=\"Trainings\" />\n        <Tab value=\"trainingscalendar\" label=\"Calendar\" />\n      </Tabs>\n      {value === 'home' && <Home />}\n      {value === 'customers' && <Customers />}\n      {value === 'trainings' && <Trainings />}\n      {value === 'trainingscalendar' && <TrainingsCalendar />}\n    </div>\n    </div>\n\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}